#include <algorithm>
#include <string>
#include <vector>
#include <cmath>
#include <map>
#include <fstream>
#include <cassert>
#include <set>
#include <queue>
#include <iostream>
#include <utility>
#include <stack>
#include <complex>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <list>
#include <functional>
#include <cctype>
using namespace std;
typedef long double ld;
typedef long long ll;
typedef pair<int,int> ppi;
typedef pair<ll,ll> ppl;
typedef pair<double,double> ppd;
#define PB push_back
#define MP make_pair
#define FIR first
#define SEC second
#define FOR(a,b,c) for(int a=(b);a<(c);++a)
#define FR(a,b) for(typeof(b.begin()) a=b.begin();a!=b.end();++a)
const int N = 2e5 + 7;
int n, m, k;
int weight[N];
int cost[N];
int weightSum[N];
int preWeight[N];
int main()
{
  scanf("%d%d%d", &n, &m, &k);
  for( int i = 0 ; i < n ; ++i )
    {
      scnaf("%d%d", weight[i], &cost[i]);
      weightSum[i] = ( i > 0 ? weightSum[ i - 1 ] : 0 ) + weight[i];
      cost[i] += i > 0 ? cost[i - 1] : 0;
    }
  int ans = 0;
  for( int i = n - 1 ; i >= m ; --i )
    {
      if( k * weightSum[ i - 1 ] < weightSum[i] - weigthSum[ i - m ];
    }
  return 0;
}
