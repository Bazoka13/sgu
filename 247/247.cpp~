#include <cstdio>
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
#define N 1001
int pri[N];
vector<int> dp[N][N];
const int mod=1000000000;
void add(vector<int> &a,vector<int> &b)
{
  int c=0;
  for(int i=0;i<a.size() || i<b.size();++i)
    {
      if(i<a.size())
	c+=a[i];
      if(i<b.size())
	c+=b[i];
      if(i<a.size())
	a[i]=c%mod;
      else a.push_back(c%mod);
      c/=mod;
    }
  if(c)
    a.push_back(c);
}
void pt(vector<int> &a)
{
  if(a.size()==0)
    printf("0");
  else
    {
      int i=a.size()-1;
      printf("%d",a[i]);
      for(--i;i>=0;--i)
	printf("%09d",a[i]);
    }
}
int main()
{
  for(int i=2;i<N;++i)
    if(pri[i]==0)
      {
	for(int j=i*i;j<N;j+=i)
	  pri[j]=1;
	vector<int> ans;
	dp[0][0].push_back(1);
	for(int j=1;j<=2*i;++j)
	  for(int l=max(0,i-(2*i-j+1));l<min(j,i);++l)
	    for(int k=0;k<i;++k)
	      if(dp[k][l].size()>0)
		add(dp[(k+j)%i][l+1],dp[k][l]);
	cout<<"p["<<i<<"]=(string)\"";
	pt(dp[0][i]);
	cout<<"\";"<<endl;
	for(int j=0;j<i;++j)
	  for(int k=0;k<=i;++k)
	    dp[j][k].resize(0);
      }
  return 0;
}
